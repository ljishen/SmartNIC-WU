#!/usr/bin/env -S gnuplot --persist -c
#
# This script creates a SVG file from the result generated by script
# bench.sh using gunplot.
#
# Prerequisites:
#   GNU Coreutils >= 8.30
#     env supports the -S/--split-string=S option to split a single
#     argument string into multiple arguments.
#     https://github.com/coreutils/coreutils/blob/master/NEWS
#   gnuplot >= 5.2
#     1. support passing parameters to a gnuplot script (ie. ARGC)
#     http://www.gnuplot.info/ReleaseNotes_5_0_7.html
#
#     2. GPVAL_SYSTEM_ERRNO
#     http://www.gnuplot.info/docs_5.2/Gnuplot_5.2.pdf, p201

if (ARGC != 1) {
  print sprintf("Usage:    %s DATAFILE\n",ARG0)
  print "DATAFILE: the file generated by the bench.sh script"
  exit
}

datafile = ARG1
system("test -f ".datafile)
if (GPVAL_SYSTEM_ERRNO != 0) {
  printerr sprintf("[ERROR] Cannot find datafile: %s",datafile)
  exit status GPVAL_SYSTEM_ERRNO
}


set terminal svg size 600,600 enhanced font "arial,12" fontscale 1.0

output_dir = system("dirname -- ".datafile)
datafile_name = system("basename -- ".datafile)
indexof_dot = strstrt(datafile_name,".")
datafile_name_noext = substr(datafile_name,1,(indexof_dot == 0 ? -1 : indexof_dot - 1))
set output output_dir."/".datafile_name_noext.".svg"

set mytics 2
set grid xtics ytics mytics linetype 1 linecolor "grey" linewidth 0.5, linetype 0
set key outside top center horizontal Left reverse nobox
set title offset 0,1 font ",15" noenhanced
set datafile missing NaN

data_header = system("grep --max-count=1 '^[^#]' ".datafile)

set autoscale x
set ylabel word(data_header,5)

device_speed = system("grep -oPi 'device speed: \\K\\d+' ".datafile)
if (strlen(device_speed) > 0) {
  set yrange [0:device_speed]
} else {
  set yrange [0:*]
}

pkt_size = system(sprintf("echo '%s' | tr -dc '0-9'",datafile_name_noext))

stats datafile using 2 name "threads" nooutput

if (strstrt(datafile_name,"_delays")) {  # a datafile for benchmarking delays
  stats datafile using 3 name "clone_skb" nooutput
  stats datafile using 4 name "burst" nooutput
  set title sprintf("Network Throughput (%s bytes, %d clone_skb, %d burst)", \
    pkt_size,clone_skb_max,burst_max)
  set xlabel word(data_header,1)

  plot for [i=threads_min:threads_max] \
    datafile using 1:($2 == i ? $5 : NaN):6 with errorlines \
    title sprintf("%d threads",i)
} else {
  set title sprintf("Network Throughput (pkt_size: %s bytes)",pkt_size)
  set xlabel word(data_header,4)

  stats datafile using 4:($3 == 0 ? $5 : NaN) name "burst_throughput" nooutput
  stats datafile using 2:($3 == 0 ? $5 : NaN) name "thread_throughput" nooutput
  set arrow from burst_throughput_pos_max_y-5, graph 1.05 to \
    burst_throughput_pos_max_y, burst_throughput_max_y filled
  set label at burst_throughput_pos_max_y-5, graph 1.05 \
    sprintf("max throughput %d with %d threads", \
        burst_throughput_max_y,thread_throughput_pos_max_y) center offset 0,0.5

  plot for [i=threads_min:threads_max] \
    datafile using 4:($2 == i && $3 == 0 ? $5 : NaN):6 with errorlines \
    title sprintf("%d threads",i)
}
